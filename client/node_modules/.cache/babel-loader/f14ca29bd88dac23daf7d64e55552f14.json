{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\korek\\\\Desktop\\\\project\\\\fullstack-todo\\\\client\\\\src\\\\App.js\";\nimport React from 'react'; //App\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(ToDo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n} //ToDo\n\nclass ToDo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [// {id: '1', text: 'Купить хлеб'},\n        // {id: '2', text: 'Купить молоко'},\n        // {id: '3', text: 'Купить кофе'}\n      ]\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.delTodo = this.delTodo.bind(this);\n    this.saveToDo = this.saveToDo.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/api').then(response => response.json()) //.then(result => {this.setState({todos: result} ) })\n    .then(result => {\n      this.setState(state => {\n        for (let item of result) {\n          item.id = item.id.toString();\n        }\n\n        return {\n          todos: result\n        };\n      });\n    });\n  }\n\n  createID() {\n    //генератор id для list-item\n    while (true) {\n      const id = Math.floor(Math.random() * 1000); // от 1 до 9999\n\n      for (let i = 0; i < this.state.todos.length; i++) {\n        if (this.state.todos[i].id != id) return id.toString();\n      }\n    }\n  }\n\n  addTodo(newTodoText) {\n    // this.state.todos.unshift({id: '1', text: newTodoText})\n    // console.log(this.state.todos)\n    // this.setState({todos: this.state.todos})\n    this.setState(state => {\n      const cloneTodos = Object.assign([], state.todos); //клонирование массива\n      //Не может аншифтнуть в пустой массив\n\n      if (cloneTodos.length != 0) cloneTodos.unshift({\n        id: this.createID(),\n        text: newTodoText\n      });else cloneTodos.unshift({\n        id: '1',\n        text: newTodoText\n      }); // cloneTodos.splice(0, 0, {id: this.createID(), text: newTodoText} )\n      // else cloneTodos.push({id: this.createID(), text: newTodoText})\n\n      return {\n        todos: cloneTodos\n      };\n    });\n  }\n\n  delTodo(delID) {\n    this.setState(state => {\n      const pos = state.todos.findIndex(value => value.id === delID);\n      const cloneTodos = Object.assign([], state.todos);\n      cloneTodos.splice(pos, 1);\n      return {\n        todos: cloneTodos\n      };\n    });\n  }\n\n  saveToDo(todo) {\n    let pos;\n\n    for (let i = 0; i < this.state.todos.length; i++) {\n      if (this.state.todos[i].id === todo.id) pos = i;\n    }\n\n    this.setState(state => {\n      const cloneTodos = Object.assign([], state.todos);\n      console.log(cloneTodos);\n      cloneTodos.splice(pos, 1, {\n        id: todo.id,\n        text: todo.textValue\n      });\n      console.log(cloneTodos);\n      return {\n        todos: cloneTodos\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(AddToDo, {\n        addTodo: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListToDo, {\n        todos: this.state.todos,\n        delTodo: this.delTodo,\n        saveToDo: this.saveToDo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n} //AddToDo\n\n\nclass AddToDo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      addText: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({\n      addText: evt.target.value\n    });\n  }\n\n  handleAdd(evt) {\n    evt.preventDefault();\n    console.log('before call parent method');\n    this.props.addTodo(this.state.addText);\n    console.log('after call parent method');\n    this.setState({\n      addText: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"todo__add\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"add__input\",\n        value: this.state.addText,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add__button\",\n        onClick: this.handleAdd,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n} //ListToDo\n\n\nclass ListToDo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      // changeMode: ['1'], //строковые id для тех строк, которые находятся в статусе на изменение  \n      // textValue: ''\n      changeMode: [// {id: '1', textValue: 'asd'}\n      ]\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  handleDelete(evt) {\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\n    const delID = evt.target.closest('.list__item').getAttribute('data-id');\n    this.props.delTodo(delID);\n  }\n\n  handleChange(evt) {\n    //добавляем моды в ChangeMode\n    const target = evt.target.closest('.list__item').getAttribute('data-id'); // console.log(target) //id изменяемого li\n\n    this.setState(state => {\n      const changeModeClone = Object.assign([], state.changeMode);\n      changeModeClone.push({\n        id: target,\n        textValue: ''\n      });\n      return {\n        changeMode: changeModeClone\n      };\n    });\n  }\n\n  handleChangeText(evt) {\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\n    const changeID = evt.target.closest('.list__item').getAttribute('data-id');\n    this.setState(state => {\n      const changeModeClone = Object.assign([], state.changeMode);\n\n      for (let i = 0; i < changeModeClone.length; i++) {\n        if (changeModeClone[i].id === changeID) {\n          changeModeClone[i].textValue = evt.target.value;\n          break;\n        }\n      }\n\n      return {\n        changeMode: changeModeClone\n      };\n    });\n  }\n\n  isChangeMode(id) {\n    let isMode = false;\n\n    for (let item of this.state.changeMode) {\n      if (item.id === id) {\n        isMode = true;\n      }\n    }\n\n    return isMode;\n  }\n\n  changeModePos(id) {\n    let pos;\n\n    for (let i = 0; i < this.state.changeMode.length; i++) {\n      if (this.state.changeMode[i].id === id) {\n        pos = i;\n      }\n    }\n\n    return pos;\n  }\n\n  handleSave(evt) {\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\n    const saveID = evt.target.closest('.list__item').getAttribute('data-id');\n    const pos = this.changeModePos(saveID); //позиция в массиве changeMode\n\n    this.props.saveToDo(this.state.changeMode[pos]); // console.log(this.state.changeMode[pos])\n\n    this.setState(state => {\n      const changeModeClone = Object.assign([], state.changeMode);\n      changeModeClone.splice(pos, 1);\n      return {\n        changeMode: changeModeClone\n      };\n    });\n  }\n\n  render() {\n    // console.log(this.isChangeMode('2'))\n    const todos = this.props.todos.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list__item\",\n        \"data-id\": value.id,\n        children: [// this.state.changeMode.includes({id: value.id, textValue: ''}) \n        this.isChangeMode(value.id) ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input__change\",\n          value: this.state.changeMode[this.changeModePos(value.id)].textValue,\n          onChange: this.handleChangeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this) : `${index + 1}. ${value.text}`, this.isChangeMode(value.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__save\",\n          onClick: this.handleSave,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__change\",\n          onClick: this.handleChange,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__delete\",\n          onClick: this.handleDelete,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo__list\",\n      children: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/korek/Desktop/project/fullstack-todo/client/src/App.js"],"names":["React","App","Component","render","ToDo","constructor","state","todos","addTodo","bind","delTodo","saveToDo","componentDidMount","fetch","then","response","json","result","setState","item","id","toString","createID","Math","floor","random","i","length","newTodoText","cloneTodos","Object","assign","unshift","text","delID","pos","findIndex","value","splice","todo","console","log","textValue","AddToDo","addText","handleChange","handleAdd","evt","target","preventDefault","props","ListToDo","changeMode","handleDelete","handleChangeText","handleSave","closest","getAttribute","changeModeClone","push","changeID","isChangeMode","isMode","changeModePos","saveID","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;;AACA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAG/CC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACL,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAP8C,C,CAWjD;;AACA,MAAMC,IAAN,SAAmBJ,KAAK,CAACE,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CACL;AACA;AACA;AAHK;AADI,KAAb;AAQA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,2BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEE;AAFF,KAGGF,IAHH,CAGQG,MAAM,IAAI;AAAC,WAAKC,QAAL,CAAcZ,KAAK,IAAI;AACtC,aAAI,IAAIa,IAAR,IAAgBF,MAAhB,EAAwB;AACtBE,UAAAA,IAAI,CAACC,EAAL,GAAUD,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAV;AACD;;AACD,eAAO;AAACd,UAAAA,KAAK,EAAEU;AAAR,SAAP;AACD,OALgB;AAKZ,KARP;AAUD;;AAIDK,EAAAA,QAAQ,GAAG;AAAE;AACX,WAAM,IAAN,EAAY;AACV,YAAMF,EAAE,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAX,CADU,CACkC;;AAC5C,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKpB,KAAL,CAAWC,KAAX,CAAiBoB,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,YAAI,KAAKpB,KAAL,CAAWC,KAAX,CAAiBmB,CAAjB,EAAoBN,EAApB,IAA0BA,EAA9B,EAAkC,OAAOA,EAAE,CAACC,QAAH,EAAP;AACnC;AACF;AACF;;AAEDb,EAAAA,OAAO,CAACoB,WAAD,EAAc;AACnB;AACA;AACA;AAEA,SAAKV,QAAL,CAAeZ,KAAK,IAAI;AACtB,YAAMuB,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzB,KAAK,CAACC,KAAxB,CAAnB,CADsB,CAC4B;AAClD;;AACA,UAAIsB,UAAU,CAACF,MAAX,IAAqB,CAAzB,EAA4BE,UAAU,CAACG,OAAX,CAAmB;AAACZ,QAAAA,EAAE,EAAE,KAAKE,QAAL,EAAL;AAAsBW,QAAAA,IAAI,EAAEL;AAA5B,OAAnB,EAA5B,KACKC,UAAU,CAACG,OAAX,CAAmB;AAACZ,QAAAA,EAAE,EAAE,GAAL;AAAUa,QAAAA,IAAI,EAAEL;AAAhB,OAAnB,EAJiB,CAKtB;AACA;;AACA,aAAO;AAACrB,QAAAA,KAAK,EAAEsB;AAAR,OAAP;AACD,KARD;AASD;;AAEDnB,EAAAA,OAAO,CAACwB,KAAD,EAAQ;AACb,SAAKhB,QAAL,CAAeZ,KAAK,IAAI;AACtB,YAAM6B,GAAG,GAAG7B,KAAK,CAACC,KAAN,CAAY6B,SAAZ,CAAuBC,KAAK,IAAIA,KAAK,CAACjB,EAAN,KAAac,KAA7C,CAAZ;AACA,YAAML,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzB,KAAK,CAACC,KAAxB,CAAnB;AACAsB,MAAAA,UAAU,CAACS,MAAX,CAAkBH,GAAlB,EAAuB,CAAvB;AACA,aAAO;AAAC5B,QAAAA,KAAK,EAAEsB;AAAR,OAAP;AACD,KALD;AAMD;;AAEDlB,EAAAA,QAAQ,CAAC4B,IAAD,EAAO;AACb,QAAIJ,GAAJ;;AACA,SAAK,IAAIT,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKpB,KAAL,CAAWC,KAAX,CAAiBoB,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,UAAI,KAAKpB,KAAL,CAAWC,KAAX,CAAiBmB,CAAjB,EAAoBN,EAApB,KAA2BmB,IAAI,CAACnB,EAApC,EAAwCe,GAAG,GAAGT,CAAN;AACzC;;AAED,SAAKR,QAAL,CAAeZ,KAAK,IAAI;AACtB,YAAMuB,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzB,KAAK,CAACC,KAAxB,CAAnB;AACAiC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACAA,MAAAA,UAAU,CAACS,MAAX,CAAkBH,GAAlB,EAAuB,CAAvB,EAA0B;AAACf,QAAAA,EAAE,EAAEmB,IAAI,CAACnB,EAAV;AAAca,QAAAA,IAAI,EAAEM,IAAI,CAACG;AAAzB,OAA1B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACA,aAAO;AAACtB,QAAAA,KAAK,EAAEsB;AAAR,OAAP;AACD,KAND;AAQD;;AAED1B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKK;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAA5B;AAAmC,QAAA,OAAO,EAAE,KAAKG,OAAjD;AAA0D,QAAA,QAAQ,EAAE,KAAKC;AAAzE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxFgC,C,CA4FnC;;;AACA,MAAMgC,OAAN,SAAsB3C,KAAK,CAACE,SAA5B,CAAsC;AACpCG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXsC,MAAAA,OAAO,EAAE;AADE,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBpC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKqC,SAAL,GAAiB,KAAKA,SAAL,CAAerC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDoC,EAAAA,YAAY,CAACE,GAAD,EAAM;AAChB,SAAK7B,QAAL,CAAc;AAAC0B,MAAAA,OAAO,EAAEG,GAAG,CAACC,MAAJ,CAAWX;AAArB,KAAd;AACD;;AAEDS,EAAAA,SAAS,CAACC,GAAD,EAAM;AACbA,IAAAA,GAAG,CAACE,cAAJ;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,SAAKS,KAAL,CAAW1C,OAAX,CAAmB,KAAKF,KAAL,CAAWsC,OAA9B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,SAAKvB,QAAL,CAAc;AAAC0B,MAAAA,OAAO,EAAE;AAAV,KAAd;AACD;;AAEDzC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWsC,OAAhD;AAAyD,QAAA,QAAQ,EAAE,KAAKC;AAAxE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAE,KAAKC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAhCmC,C,CAoCtC;;;AACA,MAAMK,QAAN,SAAuBnD,KAAK,CAACE,SAA7B,CAAuC;AACrCG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACX;AACA;AAEA8C,MAAAA,UAAU,EAAE,CACV;AADU;AAJD,KAAb;AASA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkB5C,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKoC,YAAL,GAAoB,KAAKA,YAAL,CAAkBpC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK6C,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB7C,IAAtB,CAA2B,IAA3B,CAAxB;AAEA,SAAK8C,UAAL,GAAkB,KAAKA,UAAL,CAAgB9C,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAED4C,EAAAA,YAAY,CAACN,GAAD,EAAM;AAChB;AACA,UAAMb,KAAK,GAAGa,GAAG,CAACC,MAAJ,CAAWQ,OAAX,CAAmB,aAAnB,EAAkCC,YAAlC,CAA+C,SAA/C,CAAd;AACA,SAAKP,KAAL,CAAWxC,OAAX,CAAmBwB,KAAnB;AACD;;AAEDW,EAAAA,YAAY,CAACE,GAAD,EAAM;AAAE;AAClB,UAAMC,MAAM,GAAGD,GAAG,CAACC,MAAJ,CAAWQ,OAAX,CAAmB,aAAnB,EAAkCC,YAAlC,CAA+C,SAA/C,CAAf,CADgB,CAEhB;;AACA,SAAKvC,QAAL,CAAeZ,KAAK,IAAI;AACtB,YAAMoD,eAAe,GAAG5B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzB,KAAK,CAAC8C,UAAxB,CAAxB;AACAM,MAAAA,eAAe,CAACC,IAAhB,CAAqB;AAACvC,QAAAA,EAAE,EAAE4B,MAAL;AAAaN,QAAAA,SAAS,EAAE;AAAxB,OAArB;AACA,aAAO;AAACU,QAAAA,UAAU,EAAEM;AAAb,OAAP;AACD,KAJD;AAKD;;AAEDJ,EAAAA,gBAAgB,CAACP,GAAD,EAAM;AACpB;AACA,UAAMa,QAAQ,GAAGb,GAAG,CAACC,MAAJ,CAAWQ,OAAX,CAAmB,aAAnB,EAAkCC,YAAlC,CAA+C,SAA/C,CAAjB;AACA,SAAKvC,QAAL,CAAeZ,KAAK,IAAI;AACtB,YAAMoD,eAAe,GAAG5B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzB,KAAK,CAAC8C,UAAxB,CAAxB;;AACA,WAAK,IAAI1B,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACgC,eAAe,CAAC/B,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,YAAIgC,eAAe,CAAChC,CAAD,CAAf,CAAmBN,EAAnB,KAA0BwC,QAA9B,EAAwC;AACtCF,UAAAA,eAAe,CAAChC,CAAD,CAAf,CAAmBgB,SAAnB,GAA+BK,GAAG,CAACC,MAAJ,CAAWX,KAA1C;AACA;AACD;AACF;;AACD,aAAO;AAACe,QAAAA,UAAU,EAAEM;AAAb,OAAP;AACD,KATD;AAWD;;AAEDG,EAAAA,YAAY,CAACzC,EAAD,EAAK;AACf,QAAI0C,MAAM,GAAG,KAAb;;AACA,SAAK,IAAI3C,IAAT,IAAiB,KAAKb,KAAL,CAAW8C,UAA5B,EAAwC;AACtC,UAAIjC,IAAI,CAACC,EAAL,KAAYA,EAAhB,EAAoB;AAClB0C,QAAAA,MAAM,GAAG,IAAT;AACD;AACF;;AACD,WAAOA,MAAP;AACD;;AAEDC,EAAAA,aAAa,CAAC3C,EAAD,EAAK;AAChB,QAAIe,GAAJ;;AACA,SAAK,IAAIT,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKpB,KAAL,CAAW8C,UAAX,CAAsBzB,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjD,UAAI,KAAKpB,KAAL,CAAW8C,UAAX,CAAsB1B,CAAtB,EAAyBN,EAAzB,KAAgCA,EAApC,EAAwC;AACtCe,QAAAA,GAAG,GAAGT,CAAN;AACD;AACF;;AACD,WAAOS,GAAP;AACD;;AAEDoB,EAAAA,UAAU,CAACR,GAAD,EAAM;AACd;AACA,UAAMiB,MAAM,GAAGjB,GAAG,CAACC,MAAJ,CAAWQ,OAAX,CAAmB,aAAnB,EAAkCC,YAAlC,CAA+C,SAA/C,CAAf;AACA,UAAMtB,GAAG,GAAG,KAAK4B,aAAL,CAAmBC,MAAnB,CAAZ,CAHc,CAGyB;;AAEvC,SAAKd,KAAL,CAAWvC,QAAX,CAAoB,KAAKL,KAAL,CAAW8C,UAAX,CAAsBjB,GAAtB,CAApB,EALc,CAMd;;AAEA,SAAKjB,QAAL,CAAeZ,KAAK,IAAI;AACtB,YAAMoD,eAAe,GAAG5B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzB,KAAK,CAAC8C,UAAxB,CAAxB;AACAM,MAAAA,eAAe,CAACpB,MAAhB,CAAuBH,GAAvB,EAA4B,CAA5B;AACA,aAAO;AAACiB,QAAAA,UAAU,EAAEM;AAAb,OAAP;AACD,KAJD;AAMD;;AAEDvD,EAAAA,MAAM,GAAG;AAEP;AAEA,UAAMI,KAAK,GAAG,KAAK2C,KAAL,CAAW3C,KAAX,CAAiB0D,GAAjB,CAAsB,CAAC5B,KAAD,EAAQ6B,KAAR,KAAkB;AACpD,0BAAO;AAAI,QAAA,SAAS,EAAC,YAAd;AAAuC,mBAAS7B,KAAK,CAACjB,EAAtD;AAAA,mBAEH;AACA,aAAKyC,YAAL,CAAkBxB,KAAK,CAACjB,EAAxB,iBACI;AAAO,UAAA,SAAS,EAAC,eAAjB;AAAiC,UAAA,KAAK,EAAE,KAAKd,KAAL,CAAW8C,UAAX,CAAsB,KAAKW,aAAL,CAAmB1B,KAAK,CAACjB,EAAzB,CAAtB,EAAoDsB,SAA5F;AAAuG,UAAA,QAAQ,EAAE,KAAKY;AAAtH;AAAA;AAAA;AAAA;AAAA,gBADJ,GAEM,GAAEY,KAAK,GAAG,CAAE,KAAI7B,KAAK,CAACJ,IAAK,EAL9B,EAQH,KAAK4B,YAAL,CAAkBxB,KAAK,CAACjB,EAAxB,iBACI;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,OAAO,EAAE,KAAKmC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAEI;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,KAAKV,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVD,eAYL;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,KAAKQ,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZK;AAAA,SAAgCa,KAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;AAcD,KAfa,CAAd;AAiBA,wBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACG3D;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAjHoC","sourcesContent":["import React from 'react'\r\n\r\n\r\n//App\r\nexport default class App extends React.Component {\r\n  \r\n\r\n  render() {\r\n    return <div className='wrapper'>\r\n      <ToDo />\r\n    </div>\r\n  }\r\n}\r\n\r\n\r\n//ToDo\r\nclass ToDo extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      todos: [\r\n        // {id: '1', text: 'Купить хлеб'},\r\n        // {id: '2', text: 'Купить молоко'},\r\n        // {id: '3', text: 'Купить кофе'}\r\n      ]\r\n    }\r\n\r\n    this.addTodo = this.addTodo.bind(this)\r\n    this.delTodo = this.delTodo.bind(this)\r\n    this.saveToDo = this.saveToDo.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:5000/api')\r\n      .then(response => response.json())\r\n      //.then(result => {this.setState({todos: result} ) })\r\n      .then(result => {this.setState(state => {\r\n        for(let item of result) {\r\n          item.id = item.id.toString()\r\n        }\r\n        return {todos: result}\r\n      } ) })\r\n      \r\n  }\r\n\r\n  componentDidUpdate\r\n\r\n  createID() { //генератор id для list-item\r\n    while(true) {\r\n      const id = Math.floor(Math.random() * 1000) // от 1 до 9999\r\n      for (let i=0; i<this.state.todos.length; i++) {\r\n        if (this.state.todos[i].id != id) return id.toString()\r\n      }\r\n    }\r\n  }\r\n\r\n  addTodo(newTodoText) {\r\n    // this.state.todos.unshift({id: '1', text: newTodoText})\r\n    // console.log(this.state.todos)\r\n    // this.setState({todos: this.state.todos})\r\n\r\n    this.setState( state => {\r\n      const cloneTodos = Object.assign([], state.todos) //клонирование массива\r\n      //Не может аншифтнуть в пустой массив\r\n      if (cloneTodos.length != 0) cloneTodos.unshift({id: this.createID(), text: newTodoText})\r\n      else cloneTodos.unshift({id: '1', text: newTodoText})\r\n      // cloneTodos.splice(0, 0, {id: this.createID(), text: newTodoText} )\r\n      // else cloneTodos.push({id: this.createID(), text: newTodoText})\r\n      return {todos: cloneTodos}\r\n    })\r\n  }\r\n\r\n  delTodo(delID) {\r\n    this.setState( state => {\r\n      const pos = state.todos.findIndex( value => value.id === delID)\r\n      const cloneTodos = Object.assign([], state.todos)\r\n      cloneTodos.splice(pos, 1)\r\n      return {todos: cloneTodos}\r\n    })\r\n  }\r\n\r\n  saveToDo(todo) {\r\n    let pos\r\n    for (let i=0; i<this.state.todos.length; i++) {\r\n      if (this.state.todos[i].id === todo.id) pos = i\r\n    }\r\n\r\n    this.setState( state => {\r\n      const cloneTodos = Object.assign([], state.todos)\r\n      console.log(cloneTodos)\r\n      cloneTodos.splice(pos, 1, {id: todo.id, text: todo.textValue})\r\n      console.log(cloneTodos)\r\n      return {todos: cloneTodos}\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='todo'>\r\n        <AddToDo addTodo={this.addTodo}/>  \r\n        <ListToDo todos={this.state.todos} delTodo={this.delTodo} saveToDo={this.saveToDo}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//AddToDo\r\nclass AddToDo extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      addText: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleAdd = this.handleAdd.bind(this)\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.setState({addText: evt.target.value})\r\n  }\r\n\r\n  handleAdd(evt) {\r\n    evt.preventDefault()\r\n    console.log('before call parent method')\r\n    this.props.addTodo(this.state.addText)\r\n    console.log('after call parent method')\r\n    this.setState({addText: ''}) \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className='todo__add'>\r\n        <input className='add__input' value={this.state.addText} onChange={this.handleChange}/>\r\n        <button className='add__button' onClick={this.handleAdd}>\r\n          Добавить  \r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//ListToDo\r\nclass ListToDo extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      // changeMode: ['1'], //строковые id для тех строк, которые находятся в статусе на изменение  \r\n      // textValue: ''\r\n\r\n      changeMode: [\r\n        // {id: '1', textValue: 'asd'}\r\n      ]\r\n    }\r\n\r\n    this.handleDelete = this.handleDelete.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleChangeText = this.handleChangeText.bind(this)\r\n\r\n    this.handleSave = this.handleSave.bind(this)\r\n  }\r\n\r\n  handleDelete(evt) {\r\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\r\n    const delID = evt.target.closest('.list__item').getAttribute('data-id')\r\n    this.props.delTodo(delID)\r\n  }\r\n\r\n  handleChange(evt) { //добавляем моды в ChangeMode\r\n    const target = evt.target.closest('.list__item').getAttribute('data-id')\r\n    // console.log(target) //id изменяемого li\r\n    this.setState( state => {\r\n      const changeModeClone = Object.assign([], state.changeMode)\r\n      changeModeClone.push({id: target, textValue: ''})\r\n      return {changeMode: changeModeClone}\r\n    })\r\n  }\r\n\r\n  handleChangeText(evt) {\r\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\r\n    const changeID = evt.target.closest('.list__item').getAttribute('data-id')\r\n    this.setState( state => {\r\n      const changeModeClone = Object.assign([], state.changeMode)\r\n      for (let i=0; i<changeModeClone.length; i++) {\r\n        if (changeModeClone[i].id === changeID) {\r\n          changeModeClone[i].textValue = evt.target.value\r\n          break\r\n        }\r\n      }\r\n      return {changeMode: changeModeClone}\r\n    })\r\n    \r\n  }\r\n\r\n  isChangeMode(id) {\r\n    let isMode = false\r\n    for (let item of this.state.changeMode) {\r\n      if (item.id === id) {\r\n        isMode = true\r\n      }\r\n    }\r\n    return isMode\r\n  }\r\n\r\n  changeModePos(id) {\r\n    let pos\r\n    for (let i=0; i<this.state.changeMode.length; i++) {\r\n      if (this.state.changeMode[i].id === id) {\r\n        pos = i\r\n      }\r\n    }\r\n    return pos\r\n  }\r\n\r\n  handleSave(evt) {\r\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\r\n    const saveID = evt.target.closest('.list__item').getAttribute('data-id')\r\n    const pos = this.changeModePos(saveID) //позиция в массиве changeMode\r\n\r\n    this.props.saveToDo(this.state.changeMode[pos])\r\n    // console.log(this.state.changeMode[pos])\r\n\r\n    this.setState( state => {\r\n      const changeModeClone = Object.assign([], state.changeMode)\r\n      changeModeClone.splice(pos, 1)\r\n      return {changeMode: changeModeClone}\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    // console.log(this.isChangeMode('2'))\r\n\r\n    const todos = this.props.todos.map( (value, index) => {\r\n      return <li className='list__item' key={index} data-id={value.id}>\r\n        { \r\n          // this.state.changeMode.includes({id: value.id, textValue: ''}) \r\n          this.isChangeMode(value.id)\r\n            ? <input className='input__change' value={this.state.changeMode[this.changeModePos(value.id)].textValue} onChange={this.handleChangeText}/> \r\n            :  `${index + 1}. ${value.text}`\r\n        }\r\n        { \r\n          this.isChangeMode(value.id)\r\n            ? <button className='btn__save' onClick={this.handleSave}>Сохранить</button> \r\n            : <button className='btn__change' onClick={this.handleChange}>Изменить</button>\r\n        }\r\n        <button className='btn__delete' onClick={this.handleDelete}>Удалить</button>\r\n      </li>\r\n    })\r\n\r\n    return (\r\n      <ul className='todo__list'>\r\n        {todos}\r\n      </ul>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}