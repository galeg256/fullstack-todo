{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User_ya\\\\Desktop\\\\repos\\\\fullstack-todo\\\\client\\\\src\\\\components\\\\todo.js\";\nimport React from 'react'; //ToDo\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ToDo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [// {id: '1', text: 'Купить хлеб'},\n        // {id: '2', text: 'Купить молоко'},\n        // {id: '3', text: 'Купить кофе'}\n      ]\n    };\n    this.foo(); //call fetch as componentWillMount\n\n    this.fetchToDo();\n    this.addTodo = this.addTodo.bind(this);\n    this.delTodo = this.delTodo.bind(this);\n    this.saveToDo = this.saveToDo.bind(this);\n  }\n\n  foo() {\n    console.log('asd');\n  }\n\n  async fetchToDo() {\n    const res = await fetch('/api');\n    const result = res.json();\n\n    if (res.ok) {\n      //take data\n      this.setState(() => {\n        for (let item of result) {\n          item.id = item.id.toString();\n        }\n\n        return {\n          todos: result\n        };\n      });\n    } else {\n      if (res.status === 401) {\n        this.props.changeForm('AuthForm'); //go to Auth form\n      } else {\n        console.log(result.msg);\n      }\n    } // console.log(\"mount\")\n    // fetch('/api')\n    //   .then(response => response.json())\n    //   //.then(result => {this.setState({todos: result} ) })\n    //   .then(result => {this.setState(state => {\n    //     for(let item of result) {\n    //       item.id = item.id.toString()\n    //     }\n    //     return {todos: result}\n    //     }) \n    //   }) \n\n  } // componentDidMount() {\n  //   console.log(\"mount\")\n  //   fetch('/api')\n  //     .then(response => response.json())\n  //     //.then(result => {this.setState({todos: result} ) })\n  //     .then(result => {this.setState(state => {\n  //       for(let item of result) {\n  //         item.id = item.id.toString()\n  //       }\n  //       return {todos: result}\n  //     } ) })    \n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   // if (prevState)\n  //   // console.log(prevState)\n  //   if (prevState.todos.length && (this.state.todos.length < prevState.todos.length)) {\n  //     //console.log(prevState)\n  //     console.log(\"delete\")\n  //   }\n  // }\n\n\n  createID() {\n    //генератор id для list-item\n    while (true) {\n      const id = Math.floor(Math.random() * 1000); // от 1 до 9999\n\n      for (let i = 0; i < this.state.todos.length; i++) {\n        if (this.state.todos[i].id != id) return id.toString();\n      }\n    }\n  }\n\n  addTodo(newTodoText) {\n    // this.state.todos.unshift({id: '1', text: newTodoText})\n    // console.log(this.state.todos)\n    // this.setState({todos: this.state.todos})\n    console.log({\n      \"name\": newTodoText\n    });\n    fetch('/api/', {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"name\": newTodoText\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState(state => {\n        const cloneTodos = Object.assign([], state.todos); //клонирование массива\n\n        if (cloneTodos.length != 0) cloneTodos.unshift({\n          id: result[0].id.toString(),\n          text: newTodoText\n        });else cloneTodos.unshift({\n          id: result[0].id.toString(),\n          text: newTodoText\n        });\n        return {\n          todos: cloneTodos\n        };\n      });\n    });\n  }\n\n  delTodo(delID) {\n    fetch(`/api/delete/${delID}`, {\n      method: \"delete\"\n    }) //.then(response => response.json())\n    .then(result => {\n      console.log(result);\n\n      if (result.status == 200) {\n        this.setState(state => {\n          const pos = state.todos.findIndex(value => value.id === delID);\n          const cloneTodos = Object.assign([], state.todos);\n          cloneTodos.splice(pos, 1);\n          return {\n            todos: cloneTodos\n          };\n        });\n      } else console.log(\"error delete\");\n    });\n  }\n\n  saveToDo(todo) {\n    console.log(todo);\n    fetch('/api/update', {\n      method: \"put\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todo)\n    }) //.then(res => res.json())\n    .then(result => {\n      if (result.status == 200) {\n        let pos;\n\n        for (let i = 0; i < this.state.todos.length; i++) {\n          if (this.state.todos[i].id === todo.id) pos = i;\n        }\n\n        this.setState(state => {\n          const cloneTodos = Object.assign([], state.todos);\n          cloneTodos.splice(pos, 1, {\n            id: todo.id,\n            text: todo.textValue\n          });\n          return {\n            todos: cloneTodos\n          };\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(AddToDo, {\n        addTodo: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListToDo, {\n        todos: this.state.todos,\n        delTodo: this.delTodo,\n        saveToDo: this.saveToDo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this);\n  }\n\n} //AddToDo\n\nclass AddToDo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      addText: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({\n      addText: evt.target.value\n    });\n  }\n\n  handleAdd(evt) {\n    evt.preventDefault();\n    this.props.addTodo(this.state.addText);\n    this.setState({\n      addText: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"todo__add\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"add__input\",\n        value: this.state.addText,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add__button\",\n        onClick: this.handleAdd,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this);\n  }\n\n} //ListToDo\n\n\nclass ListToDo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      // changeMode: ['1'], //строковые id для тех строк, которые находятся в статусе на изменение  \n      // textValue: ''\n      changeMode: [// {id: '1', textValue: 'asd'}\n      ]\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  handleDelete(evt) {\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\n    const delID = evt.target.closest('.list__item').getAttribute('data-id');\n    this.props.delTodo(delID);\n  }\n\n  handleChange(evt) {\n    //добавляем моды в ChangeMode\n    const target = evt.target.closest('.list__item').getAttribute('data-id'); // console.log(target) //id изменяемого li\n\n    this.setState(state => {\n      const changeModeClone = Object.assign([], state.changeMode);\n      changeModeClone.push({\n        id: target,\n        textValue: ''\n      });\n      return {\n        changeMode: changeModeClone\n      };\n    });\n  }\n\n  handleChangeText(evt) {\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\n    const changeID = evt.target.closest('.list__item').getAttribute('data-id');\n    this.setState(state => {\n      const changeModeClone = Object.assign([], state.changeMode);\n\n      for (let i = 0; i < changeModeClone.length; i++) {\n        if (changeModeClone[i].id === changeID) {\n          changeModeClone[i].textValue = evt.target.value;\n          break;\n        }\n      }\n\n      return {\n        changeMode: changeModeClone\n      };\n    });\n  }\n\n  isChangeMode(id) {\n    let isMode = false;\n\n    for (let item of this.state.changeMode) {\n      if (item.id === id) {\n        isMode = true;\n      }\n    }\n\n    return isMode;\n  }\n\n  changeModePos(id) {\n    let pos;\n\n    for (let i = 0; i < this.state.changeMode.length; i++) {\n      if (this.state.changeMode[i].id === id) {\n        pos = i;\n      }\n    }\n\n    return pos;\n  }\n\n  handleSave(evt) {\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\n    const saveID = evt.target.closest('.list__item').getAttribute('data-id');\n    const pos = this.changeModePos(saveID); //позиция в массиве changeMode\n\n    this.props.saveToDo(this.state.changeMode[pos]); // console.log(this.state.changeMode[pos])\n\n    this.setState(state => {\n      const changeModeClone = Object.assign([], state.changeMode);\n      changeModeClone.splice(pos, 1);\n      return {\n        changeMode: changeModeClone\n      };\n    });\n  }\n\n  render() {\n    // console.log(this.isChangeMode('2'))\n    const todos = this.props.todos.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list__item\",\n        \"data-id\": value.id,\n        children: [// this.state.changeMode.includes({id: value.id, textValue: ''}) \n        this.isChangeMode(value.id) ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input__change\",\n          value: this.state.changeMode[this.changeModePos(value.id)].textValue,\n          onChange: this.handleChangeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }, this) : `${index + 1}. ${value.text}`, this.isChangeMode(value.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__save\",\n          onClick: this.handleSave,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__change\",\n          onClick: this.handleChange,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__delete\",\n          onClick: this.handleDelete,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 16\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo__list\",\n      children: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User_ya/Desktop/repos/fullstack-todo/client/src/components/todo.js"],"names":["React","ToDo","Component","constructor","state","todos","foo","fetchToDo","addTodo","bind","delTodo","saveToDo","console","log","res","fetch","result","json","ok","setState","item","id","toString","status","props","changeForm","msg","createID","Math","floor","random","i","length","newTodoText","method","headers","body","JSON","stringify","then","cloneTodos","Object","assign","unshift","text","delID","pos","findIndex","value","splice","todo","textValue","render","AddToDo","addText","handleChange","handleAdd","evt","target","preventDefault","ListToDo","changeMode","handleDelete","handleChangeText","handleSave","closest","getAttribute","changeModeClone","push","changeID","isChangeMode","isMode","changeModePos","saveID","map","index"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\n//ToDo\r\nexport default class ToDo extends React.Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        todos: [\r\n          // {id: '1', text: 'Купить хлеб'},\r\n          // {id: '2', text: 'Купить молоко'},\r\n          // {id: '3', text: 'Купить кофе'}\r\n        ]\r\n      }\r\n\r\n      this.foo()\r\n      //call fetch as componentWillMount\r\n      this.fetchToDo()\r\n      \r\n\r\n\r\n      this.addTodo = this.addTodo.bind(this)\r\n      this.delTodo = this.delTodo.bind(this)\r\n      this.saveToDo = this.saveToDo.bind(this)\r\n    }\r\n  \r\n    foo() {\r\n      console.log('asd')\r\n    }\r\n\r\n    async fetchToDo() {\r\n      const res = await fetch('/api')\r\n      const result = res.json()\r\n      if (res.ok) {\r\n        //take data\r\n        this.setState( () => {\r\n          for (let item of result) {\r\n            item.id = item.id.toString()\r\n          }\r\n          return {todos: result}\r\n        })\r\n      } else {\r\n        if (res.status === 401) {\r\n          this.props.changeForm('AuthForm')\r\n          //go to Auth form\r\n        } else {\r\n          console.log(result.msg)\r\n        }\r\n      }\r\n\r\n\r\n      // console.log(\"mount\")\r\n      // fetch('/api')\r\n      //   .then(response => response.json())\r\n      //   //.then(result => {this.setState({todos: result} ) })\r\n      //   .then(result => {this.setState(state => {\r\n      //     for(let item of result) {\r\n      //       item.id = item.id.toString()\r\n      //     }\r\n      //     return {todos: result}\r\n      //     }) \r\n      //   }) \r\n    }\r\n\r\n    // componentDidMount() {\r\n    //   console.log(\"mount\")\r\n    //   fetch('/api')\r\n    //     .then(response => response.json())\r\n    //     //.then(result => {this.setState({todos: result} ) })\r\n    //     .then(result => {this.setState(state => {\r\n    //       for(let item of result) {\r\n    //         item.id = item.id.toString()\r\n    //       }\r\n    //       return {todos: result}\r\n    //     } ) })    \r\n    // }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //   // if (prevState)\r\n    //   // console.log(prevState)\r\n    //   if (prevState.todos.length && (this.state.todos.length < prevState.todos.length)) {\r\n    //     //console.log(prevState)\r\n  \r\n    //     console.log(\"delete\")\r\n    //   }\r\n    // }\r\n  \r\n    createID() { //генератор id для list-item\r\n      while(true) {\r\n        const id = Math.floor(Math.random() * 1000) // от 1 до 9999\r\n        for (let i=0; i<this.state.todos.length; i++) {\r\n          if (this.state.todos[i].id != id) return id.toString()\r\n        }\r\n      }\r\n    }\r\n  \r\n    addTodo(newTodoText) {\r\n      // this.state.todos.unshift({id: '1', text: newTodoText})\r\n      // console.log(this.state.todos)\r\n      // this.setState({todos: this.state.todos})\r\n      console.log({\"name\": newTodoText})\r\n      \r\n      fetch('/api/', {\r\n        method: \"post\",\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify({\"name\": newTodoText})\r\n      })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState(state => {\r\n          const cloneTodos = Object.assign([], state.todos) //клонирование массива\r\n          if (cloneTodos.length != 0) cloneTodos.unshift({id: result[0].id.toString(), text: newTodoText})\r\n          else cloneTodos.unshift({id: result[0].id.toString(), text: newTodoText})\r\n          return {todos: cloneTodos}\r\n        })\r\n      })\r\n    }\r\n  \r\n    delTodo(delID) {\r\n      fetch(`/api/delete/${delID}`, {\r\n        method: \"delete\"\r\n      })\r\n      //.then(response => response.json())\r\n      .then(result => {\r\n        console.log(result)\r\n        if (result.status==200) {\r\n          this.setState( state => {\r\n          const pos = state.todos.findIndex( value => value.id === delID)\r\n          const cloneTodos = Object.assign([], state.todos)\r\n          cloneTodos.splice(pos, 1)\r\n          return {todos: cloneTodos}\r\n          })\r\n        } else console.log(\"error delete\")\r\n      })\r\n    }\r\n  \r\n    saveToDo(todo) {\r\n      console.log(todo)\r\n      fetch('/api/update', {\r\n        method: \"put\",\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify(todo)\r\n      })\r\n      //.then(res => res.json())\r\n      .then(result => {    \r\n        if (result.status == 200) {\r\n          let pos\r\n          for (let i=0; i<this.state.todos.length; i++) {\r\n            if (this.state.todos[i].id === todo.id) pos = i\r\n          }\r\n  \r\n          this.setState( state => {\r\n            const cloneTodos = Object.assign([], state.todos)\r\n            cloneTodos.splice(pos, 1, {id: todo.id, text: todo.textValue})\r\n            return {todos: cloneTodos}\r\n          })\r\n        }\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className='todo'>\r\n          <AddToDo addTodo={this.addTodo}/>  \r\n          <ListToDo todos={this.state.todos} delTodo={this.delTodo} saveToDo={this.saveToDo}/>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n  \r\n  \r\n//AddToDo\r\nclass AddToDo extends React.Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        addText: ''\r\n      }\r\n  \r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.handleAdd = this.handleAdd.bind(this)\r\n    }\r\n  \r\n    handleChange(evt) {\r\n      this.setState({addText: evt.target.value})\r\n    }\r\n  \r\n    handleAdd(evt) {\r\n      evt.preventDefault()\r\n      this.props.addTodo(this.state.addText)\r\n      this.setState({addText: ''}) \r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className='todo__add'>\r\n          <input className='add__input' value={this.state.addText} onChange={this.handleChange}/>\r\n          <button className='add__button' onClick={this.handleAdd}>\r\n            Добавить  \r\n          </button>\r\n        </form>\r\n      )\r\n    }\r\n}\r\n  \r\n  \r\n//ListToDo\r\nclass ListToDo extends React.Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        // changeMode: ['1'], //строковые id для тех строк, которые находятся в статусе на изменение  \r\n        // textValue: ''\r\n  \r\n        changeMode: [\r\n          // {id: '1', textValue: 'asd'}\r\n        ]\r\n      }\r\n  \r\n      this.handleDelete = this.handleDelete.bind(this)\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.handleChangeText = this.handleChangeText.bind(this)\r\n  \r\n      this.handleSave = this.handleSave.bind(this)\r\n    }\r\n  \r\n    handleDelete(evt) {\r\n      // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\r\n      const delID = evt.target.closest('.list__item').getAttribute('data-id')\r\n      this.props.delTodo(delID)\r\n    }\r\n  \r\n    handleChange(evt) { //добавляем моды в ChangeMode\r\n      const target = evt.target.closest('.list__item').getAttribute('data-id')\r\n      // console.log(target) //id изменяемого li\r\n      this.setState( state => {\r\n        const changeModeClone = Object.assign([], state.changeMode)\r\n        changeModeClone.push({id: target, textValue: ''})\r\n        return {changeMode: changeModeClone}\r\n      })\r\n    }\r\n  \r\n    handleChangeText(evt) {\r\n      // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\r\n      const changeID = evt.target.closest('.list__item').getAttribute('data-id')\r\n      this.setState( state => {\r\n        const changeModeClone = Object.assign([], state.changeMode)\r\n        for (let i=0; i<changeModeClone.length; i++) {\r\n          if (changeModeClone[i].id === changeID) {\r\n            changeModeClone[i].textValue = evt.target.value\r\n            break\r\n          }\r\n        }\r\n        return {changeMode: changeModeClone}\r\n      })\r\n      \r\n    }\r\n  \r\n    isChangeMode(id) {\r\n      let isMode = false\r\n      for (let item of this.state.changeMode) {\r\n        if (item.id === id) {\r\n          isMode = true\r\n        }\r\n      }\r\n      return isMode\r\n    }\r\n  \r\n    changeModePos(id) {\r\n      let pos\r\n      for (let i=0; i<this.state.changeMode.length; i++) {\r\n        if (this.state.changeMode[i].id === id) {\r\n          pos = i\r\n        }\r\n      }\r\n      return pos\r\n    }\r\n  \r\n    handleSave(evt) {\r\n      // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\r\n      const saveID = evt.target.closest('.list__item').getAttribute('data-id')\r\n      const pos = this.changeModePos(saveID) //позиция в массиве changeMode\r\n  \r\n      this.props.saveToDo(this.state.changeMode[pos])\r\n      // console.log(this.state.changeMode[pos])\r\n  \r\n      this.setState( state => {\r\n        const changeModeClone = Object.assign([], state.changeMode)\r\n        changeModeClone.splice(pos, 1)\r\n        return {changeMode: changeModeClone}\r\n      })\r\n  \r\n    }\r\n  \r\n    render() {\r\n  \r\n      // console.log(this.isChangeMode('2'))\r\n        \r\n      const todos = this.props.todos.map( (value, index) => {\r\n        return <li className='list__item' key={index} data-id={value.id}>\r\n          { \r\n            // this.state.changeMode.includes({id: value.id, textValue: ''}) \r\n            this.isChangeMode(value.id)\r\n              ? <input className='input__change' value={this.state.changeMode[this.changeModePos(value.id)].textValue} onChange={this.handleChangeText}/> \r\n              :  `${index + 1}. ${value.text}`\r\n          }\r\n          { \r\n            this.isChangeMode(value.id)\r\n              ? <button className='btn__save' onClick={this.handleSave}>Сохранить</button> \r\n              : <button className='btn__change' onClick={this.handleChange}>Изменить</button>\r\n          }\r\n          <button className='btn__delete' onClick={this.handleDelete}>Удалить</button>\r\n        </li>\r\n      })\r\n  \r\n      return (\r\n        <ul className='todo__list'>\r\n          {todos}\r\n        </ul>\r\n      )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}