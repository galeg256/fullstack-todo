{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User_ya\\\\Desktop\\\\repos\\\\fullstack-todo\\\\client\\\\src\\\\components\\\\todo.component.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//ToDo\nexport default class ToDo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [{\n        id: '1',\n        text: 'Купить хлеб'\n      }, {\n        id: '2',\n        text: 'Купить молоко'\n      }, {\n        id: '3',\n        text: 'Купить кофе'\n      }]\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.delTodo = this.delTodo.bind(this);\n    this.saveToDo = this.saveToDo.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"mount\");\n    fetch('http://localhost:5000/api').then(response => response.json()) //.then(result => {this.setState({todos: result} ) })\n    .then(result => {\n      this.setState(state => {\n        for (let item of result) {\n          item.id = item.id.toString();\n        }\n\n        return {\n          todos: result\n        };\n      });\n    });\n  } // componentDidUpdate(prevProps, prevState) {\n  //   // if (prevState)\n  //   // console.log(prevState)\n  //   if (prevState.todos.length && (this.state.todos.length < prevState.todos.length)) {\n  //     //console.log(prevState)\n  //     console.log(\"delete\")\n  //   }\n  // }\n\n\n  createID() {\n    //генератор id для list-item\n    while (true) {\n      const id = Math.floor(Math.random() * 1000); // от 1 до 9999\n\n      for (let i = 0; i < this.state.todos.length; i++) {\n        if (this.state.todos[i].id != id) return id.toString();\n      }\n    }\n  }\n\n  addTodo(newTodoText) {\n    // this.state.todos.unshift({id: '1', text: newTodoText})\n    // console.log(this.state.todos)\n    // this.setState({todos: this.state.todos})\n    console.log({\n      \"name\": newTodoText\n    });\n    fetch('http://localhost:5000/api/', {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"name\": newTodoText\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState(state => {\n        const cloneTodos = Object.assign([], state.todos); //клонирование массива\n\n        if (cloneTodos.length != 0) cloneTodos.unshift({\n          id: result[0].id.toString(),\n          text: newTodoText\n        });else cloneTodos.unshift({\n          id: result[0].id.toString(),\n          text: newTodoText\n        });\n        return {\n          todos: cloneTodos\n        };\n      });\n    });\n  }\n\n  delTodo(delID) {\n    fetch(`http://localhost:5000/api/delete/${delID}`, {\n      method: \"delete\"\n    }) //.then(response => response.json())\n    .then(result => {\n      console.log(result);\n\n      if (result.status == 200) {\n        this.setState(state => {\n          const pos = state.todos.findIndex(value => value.id === delID);\n          const cloneTodos = Object.assign([], state.todos);\n          cloneTodos.splice(pos, 1);\n          return {\n            todos: cloneTodos\n          };\n        });\n      } else console.log(\"error delete\");\n    });\n  }\n\n  saveToDo(todo) {\n    console.log(todo);\n    fetch('http://localhost:5000/api/update', {\n      method: \"put\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todo)\n    }) //.then(res => res.json())\n    .then(result => {\n      if (result.status == 200) {\n        let pos;\n\n        for (let i = 0; i < this.state.todos.length; i++) {\n          if (this.state.todos[i].id === todo.id) pos = i;\n        }\n\n        this.setState(state => {\n          const cloneTodos = Object.assign([], state.todos);\n          cloneTodos.splice(pos, 1, {\n            id: todo.id,\n            text: todo.textValue\n          });\n          return {\n            todos: cloneTodos\n          };\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(AddToDo, {\n        addTodo: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListToDo, {\n        todos: this.state.todos,\n        delTodo: this.delTodo,\n        saveToDo: this.saveToDo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this);\n  }\n\n} //AddToDo\n\nclass AddToDo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      addText: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({\n      addText: evt.target.value\n    });\n  }\n\n  handleAdd(evt) {\n    evt.preventDefault();\n    this.props.addTodo(this.state.addText);\n    this.setState({\n      addText: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"todo__add\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"add__input\",\n        value: this.state.addText,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add__button\",\n        onClick: this.handleAdd,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this);\n  }\n\n} //ListToDo\n\n\nclass ListToDo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      // changeMode: ['1'], //строковые id для тех строк, которые находятся в статусе на изменение  \n      // textValue: ''\n      changeMode: [// {id: '1', textValue: 'asd'}\n      ]\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeText = this.handleChangeText.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  handleDelete(evt) {\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\n    const delID = evt.target.closest('.list__item').getAttribute('data-id');\n    this.props.delTodo(delID);\n  }\n\n  handleChange(evt) {\n    //добавляем моды в ChangeMode\n    const target = evt.target.closest('.list__item').getAttribute('data-id'); // console.log(target) //id изменяемого li\n\n    this.setState(state => {\n      const changeModeClone = Object.assign([], state.changeMode);\n      changeModeClone.push({\n        id: target,\n        textValue: ''\n      });\n      return {\n        changeMode: changeModeClone\n      };\n    });\n  }\n\n  handleChangeText(evt) {\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\n    const changeID = evt.target.closest('.list__item').getAttribute('data-id');\n    this.setState(state => {\n      const changeModeClone = Object.assign([], state.changeMode);\n\n      for (let i = 0; i < changeModeClone.length; i++) {\n        if (changeModeClone[i].id === changeID) {\n          changeModeClone[i].textValue = evt.target.value;\n          break;\n        }\n      }\n\n      return {\n        changeMode: changeModeClone\n      };\n    });\n  }\n\n  isChangeMode(id) {\n    let isMode = false;\n\n    for (let item of this.state.changeMode) {\n      if (item.id === id) {\n        isMode = true;\n      }\n    }\n\n    return isMode;\n  }\n\n  changeModePos(id) {\n    let pos;\n\n    for (let i = 0; i < this.state.changeMode.length; i++) {\n      if (this.state.changeMode[i].id === id) {\n        pos = i;\n      }\n    }\n\n    return pos;\n  }\n\n  handleSave(evt) {\n    // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\n    const saveID = evt.target.closest('.list__item').getAttribute('data-id');\n    const pos = this.changeModePos(saveID); //позиция в массиве changeMode\n\n    this.props.saveToDo(this.state.changeMode[pos]); // console.log(this.state.changeMode[pos])\n\n    this.setState(state => {\n      const changeModeClone = Object.assign([], state.changeMode);\n      changeModeClone.splice(pos, 1);\n      return {\n        changeMode: changeModeClone\n      };\n    });\n  }\n\n  render() {\n    // console.log(this.isChangeMode('2'))\n    const todos = this.props.todos.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list__item\",\n        \"data-id\": value.id,\n        children: [// this.state.changeMode.includes({id: value.id, textValue: ''}) \n        this.isChangeMode(value.id) ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input__change\",\n          value: this.state.changeMode[this.changeModePos(value.id)].textValue,\n          onChange: this.handleChangeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }, this) : `${index + 1}. ${value.text}`, this.isChangeMode(value.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__save\",\n          onClick: this.handleSave,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__change\",\n          onClick: this.handleChange,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn__delete\",\n          onClick: this.handleDelete,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 16\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo__list\",\n      children: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User_ya/Desktop/repos/fullstack-todo/client/src/components/todo.component.js"],"names":["ToDo","React","Component","constructor","state","todos","id","text","addTodo","bind","delTodo","saveToDo","componentDidMount","console","log","fetch","then","response","json","result","setState","item","toString","createID","Math","floor","random","i","length","newTodoText","method","headers","body","JSON","stringify","res","cloneTodos","Object","assign","unshift","delID","status","pos","findIndex","value","splice","todo","textValue","render","AddToDo","addText","handleChange","handleAdd","evt","target","preventDefault","props","ListToDo","changeMode","handleDelete","handleChangeText","handleSave","closest","getAttribute","changeModeClone","push","changeID","isChangeMode","isMode","changeModePos","saveID","map","index"],"mappings":"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","sourcesContent":["//ToDo\r\nexport default class ToDo extends React.Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        todos: [\r\n          {id: '1', text: 'Купить хлеб'},\r\n          {id: '2', text: 'Купить молоко'},\r\n          {id: '3', text: 'Купить кофе'}\r\n        ]\r\n      }\r\n  \r\n      this.addTodo = this.addTodo.bind(this)\r\n      this.delTodo = this.delTodo.bind(this)\r\n      this.saveToDo = this.saveToDo.bind(this)\r\n    }\r\n  \r\n    componentDidMount() {\r\n      console.log(\"mount\")\r\n      fetch('http://localhost:5000/api')\r\n        .then(response => response.json())\r\n        //.then(result => {this.setState({todos: result} ) })\r\n        .then(result => {this.setState(state => {\r\n          for(let item of result) {\r\n            item.id = item.id.toString()\r\n          }\r\n          return {todos: result}\r\n        } ) })\r\n        \r\n    }\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //   // if (prevState)\r\n    //   // console.log(prevState)\r\n    //   if (prevState.todos.length && (this.state.todos.length < prevState.todos.length)) {\r\n    //     //console.log(prevState)\r\n  \r\n    //     console.log(\"delete\")\r\n    //   }\r\n    // }\r\n  \r\n    createID() { //генератор id для list-item\r\n      while(true) {\r\n        const id = Math.floor(Math.random() * 1000) // от 1 до 9999\r\n        for (let i=0; i<this.state.todos.length; i++) {\r\n          if (this.state.todos[i].id != id) return id.toString()\r\n        }\r\n      }\r\n    }\r\n  \r\n    addTodo(newTodoText) {\r\n      // this.state.todos.unshift({id: '1', text: newTodoText})\r\n      // console.log(this.state.todos)\r\n      // this.setState({todos: this.state.todos})\r\n      console.log({\"name\": newTodoText})\r\n      \r\n      fetch('http://localhost:5000/api/', {\r\n        method: \"post\",\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify({\"name\": newTodoText})\r\n      })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState(state => {\r\n          const cloneTodos = Object.assign([], state.todos) //клонирование массива\r\n          if (cloneTodos.length != 0) cloneTodos.unshift({id: result[0].id.toString(), text: newTodoText})\r\n          else cloneTodos.unshift({id: result[0].id.toString(), text: newTodoText})\r\n          return {todos: cloneTodos}\r\n        })\r\n      })\r\n    }\r\n  \r\n    delTodo(delID) {\r\n      fetch(`http://localhost:5000/api/delete/${delID}`, {\r\n        method: \"delete\"\r\n      })\r\n      //.then(response => response.json())\r\n      .then(result => {\r\n        console.log(result)\r\n        if (result.status==200) {\r\n          this.setState( state => {\r\n          const pos = state.todos.findIndex( value => value.id === delID)\r\n          const cloneTodos = Object.assign([], state.todos)\r\n          cloneTodos.splice(pos, 1)\r\n          return {todos: cloneTodos}\r\n          })\r\n        } else console.log(\"error delete\")\r\n      })\r\n    }\r\n  \r\n    saveToDo(todo) {\r\n      console.log(todo)\r\n      fetch('http://localhost:5000/api/update', {\r\n        method: \"put\",\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify(todo)\r\n      })\r\n      //.then(res => res.json())\r\n      .then(result => {    \r\n        if (result.status == 200) {\r\n          let pos\r\n          for (let i=0; i<this.state.todos.length; i++) {\r\n            if (this.state.todos[i].id === todo.id) pos = i\r\n          }\r\n  \r\n          this.setState( state => {\r\n            const cloneTodos = Object.assign([], state.todos)\r\n            cloneTodos.splice(pos, 1, {id: todo.id, text: todo.textValue})\r\n            return {todos: cloneTodos}\r\n          })\r\n        }\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className='todo'>\r\n          <AddToDo addTodo={this.addTodo}/>  \r\n          <ListToDo todos={this.state.todos} delTodo={this.delTodo} saveToDo={this.saveToDo}/>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n  \r\n  \r\n//AddToDo\r\nclass AddToDo extends React.Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        addText: ''\r\n      }\r\n  \r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.handleAdd = this.handleAdd.bind(this)\r\n    }\r\n  \r\n    handleChange(evt) {\r\n      this.setState({addText: evt.target.value})\r\n    }\r\n  \r\n    handleAdd(evt) {\r\n      evt.preventDefault()\r\n      this.props.addTodo(this.state.addText)\r\n      this.setState({addText: ''}) \r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className='todo__add'>\r\n          <input className='add__input' value={this.state.addText} onChange={this.handleChange}/>\r\n          <button className='add__button' onClick={this.handleAdd}>\r\n            Добавить  \r\n          </button>\r\n        </form>\r\n      )\r\n    }\r\n}\r\n  \r\n  \r\n//ListToDo\r\nclass ListToDo extends React.Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        // changeMode: ['1'], //строковые id для тех строк, которые находятся в статусе на изменение  \r\n        // textValue: ''\r\n  \r\n        changeMode: [\r\n          // {id: '1', textValue: 'asd'}\r\n        ]\r\n      }\r\n  \r\n      this.handleDelete = this.handleDelete.bind(this)\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.handleChangeText = this.handleChangeText.bind(this)\r\n  \r\n      this.handleSave = this.handleSave.bind(this)\r\n    }\r\n  \r\n    handleDelete(evt) {\r\n      // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\r\n      const delID = evt.target.closest('.list__item').getAttribute('data-id')\r\n      this.props.delTodo(delID)\r\n    }\r\n  \r\n    handleChange(evt) { //добавляем моды в ChangeMode\r\n      const target = evt.target.closest('.list__item').getAttribute('data-id')\r\n      // console.log(target) //id изменяемого li\r\n      this.setState( state => {\r\n        const changeModeClone = Object.assign([], state.changeMode)\r\n        changeModeClone.push({id: target, textValue: ''})\r\n        return {changeMode: changeModeClone}\r\n      })\r\n    }\r\n  \r\n    handleChangeText(evt) {\r\n      // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\r\n      const changeID = evt.target.closest('.list__item').getAttribute('data-id')\r\n      this.setState( state => {\r\n        const changeModeClone = Object.assign([], state.changeMode)\r\n        for (let i=0; i<changeModeClone.length; i++) {\r\n          if (changeModeClone[i].id === changeID) {\r\n            changeModeClone[i].textValue = evt.target.value\r\n            break\r\n          }\r\n        }\r\n        return {changeMode: changeModeClone}\r\n      })\r\n      \r\n    }\r\n  \r\n    isChangeMode(id) {\r\n      let isMode = false\r\n      for (let item of this.state.changeMode) {\r\n        if (item.id === id) {\r\n          isMode = true\r\n        }\r\n      }\r\n      return isMode\r\n    }\r\n  \r\n    changeModePos(id) {\r\n      let pos\r\n      for (let i=0; i<this.state.changeMode.length; i++) {\r\n        if (this.state.changeMode[i].id === id) {\r\n          pos = i\r\n        }\r\n      }\r\n      return pos\r\n    }\r\n  \r\n    handleSave(evt) {\r\n      // console.log(evt.target.closest('.list__item').getAttribute('data-id'))\r\n      const saveID = evt.target.closest('.list__item').getAttribute('data-id')\r\n      const pos = this.changeModePos(saveID) //позиция в массиве changeMode\r\n  \r\n      this.props.saveToDo(this.state.changeMode[pos])\r\n      // console.log(this.state.changeMode[pos])\r\n  \r\n      this.setState( state => {\r\n        const changeModeClone = Object.assign([], state.changeMode)\r\n        changeModeClone.splice(pos, 1)\r\n        return {changeMode: changeModeClone}\r\n      })\r\n  \r\n    }\r\n  \r\n    render() {\r\n  \r\n      // console.log(this.isChangeMode('2'))\r\n        \r\n      const todos = this.props.todos.map( (value, index) => {\r\n        return <li className='list__item' key={index} data-id={value.id}>\r\n          { \r\n            // this.state.changeMode.includes({id: value.id, textValue: ''}) \r\n            this.isChangeMode(value.id)\r\n              ? <input className='input__change' value={this.state.changeMode[this.changeModePos(value.id)].textValue} onChange={this.handleChangeText}/> \r\n              :  `${index + 1}. ${value.text}`\r\n          }\r\n          { \r\n            this.isChangeMode(value.id)\r\n              ? <button className='btn__save' onClick={this.handleSave}>Сохранить</button> \r\n              : <button className='btn__change' onClick={this.handleChange}>Изменить</button>\r\n          }\r\n          <button className='btn__delete' onClick={this.handleDelete}>Удалить</button>\r\n        </li>\r\n      })\r\n  \r\n      return (\r\n        <ul className='todo__list'>\r\n          {todos}\r\n        </ul>\r\n      )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}